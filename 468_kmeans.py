# -*- coding: utf-8 -*-
"""468-KMeans.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1iSuAdVei0vWNPSeifmllfpOhKk68yP18
"""

#imports
import numpy as np
import pandas as pd
import statsmodels.api as sm
import matplotlib.pyplot as plt
import seaborn as sns
sns.set()
from sklearn.cluster import KMeans
from numpy.lib.function_base import average

#read in data
songs = pd.read_csv("top2018.csv")
print(songs.head())

#select required columns (energy and loudness)
e_l = songs.iloc[:,[4,6]]
e_l

#Elbow method to determine number of clusters 
ss = []
for x in range(1,10):
  kM = KMeans(x)
  kM.fit(e_l)
  ss_iterate = kM.inertia_
  ss.append(ss_iterate)

c_num = range(1,10)
plt.plot(c_num,ss)
plt.title("Elbow Method")
plt.xlabel('Number of Clusters')
plt.ylabel('WCSS')

#use 3 clusters
kM = KMeans(3)
clusters = kM.fit_predict(e_l)
clusters
songsClust = songs.copy()
songsClust['Clusters'] = clusters
#plot
plt.scatter(songsClust['loudness'],songsClust['energy'],c=songsClust['Clusters'],cmap='rainbow')

kM = KMeans(n_clusters = 3, init = "k-means++", random_state= 40)
e_l_kM = kM.fit_predict(e_l)

e_l = np.array(e_l)
#clusters
plt.scatter(e_l[e_l_kM == 0, 0], e_l[e_l_kM == 0, 1], s = 60, c = 'violet', label = 'Cluster1')
plt.scatter(e_l[e_l_kM == 1, 0], e_l[e_l_kM == 1, 1], s = 60, c = 'red', label = 'Cluster2')
plt.scatter(e_l[e_l_kM == 2, 0], e_l[e_l_kM == 2, 1], s = 60, c = 'blue', label = 'Cluster3')

#centroids
plt.scatter(kM.cluster_centers_[:,0], kM.cluster_centers_[:, 1], s = 100, c = 'black', label = 'Centroids')

#graph labels
plt.xlabel('Energy')
plt.ylabel('Loudness')
plt.legend()